import pygame
import random
import difflib  # Para tolerância a erros de digitação

# Inicializar o Pygame
pygame.init()

# Configurações da tela
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Jogo para aprender Inglês")

# Cores
BRANCO = (240, 248, 255)
PRETO = (0, 0, 0)
AZUL = (70, 130, 180)
VERDE = (34, 139, 34)
VERMELHO = (220, 20, 60)
CINZA = (200, 200, 200)

# Fonte
FONT = pygame.font.Font(pygame.font.match_font('impact'), 32)
BIG_FONT = pygame.font.Font(pygame.font.match_font('impact'), 48)

# Banco de palavras
words = {
    "apple": "maçã", "dog": "cachorro", "house": "casa", "book": "livro", "sun": "sol",
    "car": "carro", "tree": "árvore", "water": "água", "moon": "lua", "computer": "computador",
    "chair": "cadeira", "table": "mesa", "phone": "telefone", "window": "janela", "door": "porta"
}

word_list = list(words.items())
random.shuffle(word_list)

def draw_text(text, font, color, x, y, center=True):
    render = font.render(text, True, color)
    text_rect = render.get_rect(center=(x, y)) if center else (x, y)
    screen.blit(render, text_rect)

def draw_button(text, x, y, w, h, color, action=None):
    pygame.draw.rect(screen, color, (x, y, w, h), border_radius=10)
    draw_text(text, FONT, BRANCO, x + w // 2, y + h // 2)
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if x < mouse[0] < x + w and y < mouse[1] < y + h:
        if click[0] == 1 and action:
            action()

# Tela inicial
def start_screen():
    while True:
        screen.fill(AZUL)
        draw_text("Jogo de Inglês", BIG_FONT, BRANCO, WIDTH // 2, HEIGHT // 3)
        draw_button("Iniciar Jogo", WIDTH // 2 - 100, HEIGHT // 2, 200, 50, VERDE, main)
        pygame.display.flip()
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()

# Função para verificar se a resposta do usuário é aceitável
def is_close_match(user_input, correct_answer):
    return difflib.SequenceMatcher(None, user_input.lower(), correct_answer.lower()).ratio() > 0.8

# Tela de feedback após cada resposta
def feedback_screen(correct, correct_answer=""):
    screen.fill(VERDE if correct else VERMELHO)
    draw_text("Correto!" if correct else "Incorreto!", BIG_FONT, BRANCO, WIDTH // 2, HEIGHT // 2 - 50)
    if not correct:
        draw_text(f"A resposta era: {correct_answer}", FONT, BRANCO, WIDTH // 2, HEIGHT // 2 + 10)
        draw_text("Reveja esta palavra!", FONT, BRANCO, WIDTH // 2, HEIGHT // 2 + 50)
    pygame.display.flip()
    pygame.time.wait(1000)  # Espera 1 segundo antes de continuar
    
    if not correct:
        start_screen()

# Função principal do jogo
def main():
    clock = pygame.time.Clock()
    running = True
    score = 0  # Contador de acertos
    index = 0  # Índice da palavra atual
    user_input = ""

    while running:
        screen.fill(BRANCO)
        draw_button("Tela Inicial", 10, 10, 150, 40, CINZA, start_screen)

        if index < len(word_list):
            english_word, translation = word_list[index]
        else:
            start_screen()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RETURN:
                    correct = is_close_match(user_input, translation)
                    if correct:
                        score += 1
                    else:
                        score = 0  # Zera o score ao errar
                    feedback_screen(correct, translation)
                    index += 1
                    user_input = ""
                elif event.key == pygame.K_BACKSPACE:
                    user_input = user_input[:-1]
                elif event.key == pygame.K_ESCAPE:
                    start_screen()
                else:
                    user_input += event.unicode

        draw_text(f"Pontuação: {score}", FONT, PRETO, WIDTH // 2, 50)
        draw_text("Traduza esta palavra:", FONT, PRETO, WIDTH // 2, HEIGHT // 2 - 100)
        draw_text(english_word, BIG_FONT, AZUL, WIDTH // 2, HEIGHT // 2 - 40)
        pygame.draw.rect(screen, CINZA, (WIDTH // 2 - 160, HEIGHT // 2 + 40, 320, 60), border_radius=10)
        draw_text(user_input, FONT, PRETO, WIDTH // 2, HEIGHT // 2 + 70)
        pygame.display.flip()
        clock.tick(30)

if __name__ == "__main__":
    start_screen()
